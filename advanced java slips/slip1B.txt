import javax.swing.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.IOException;
import java.net.InetAddress;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.UnknownHostException;

/**
 * Created by : Amar Ghugare
 * created on : 20-05-2022 17:32
 * Purpose of class : to create a server of chat
 */
public class ServerChatForm extends JFrame implements ActionListener {

    static ServerSocket server;
    static Socket conn;
    JPanel panel;
    JTextField NewMsg;
    JTextArea ChatHistory;
    JButton Send;
    DataInputStream dis;
    DataOutputStream dos;
    public ServerChatForm()throws UnknownHostException, IOException{
        this.setSize(500, 500);
        this.setVisible(true);
        setDefaultCloseOperation(EXIT_ON_CLOSE);
        this.setTitle("Server");

        panel = new JPanel();
        panel.setLayout(null);
        this.add(panel);

        NewMsg = new JTextField();
        NewMsg.setBounds(20, 400, 340, 30);
        panel.add(NewMsg);

        ChatHistory = new JTextArea();
        ChatHistory.setText("Waiting for Client");
        ChatHistory.setBounds(20, 20, 450, 360);
        panel.add(ChatHistory);

        Send = new JButton("Send");
        Send.setBounds(375, 400, 95, 30);
        Send.addActionListener(this);
        panel.add(Send);


        server = new ServerSocket(2000, 1, InetAddress.getLocalHost());
        conn = server.accept();
        ChatHistory.setText(ChatHistory.getText() + '\n' + "Client Found");

        while (true) {
            try {
                DataInputStream dis = new DataInputStream(conn.getInputStream());
                String string = dis.readUTF();
                ChatHistory.setText(ChatHistory.getText() + '\n'+ "Client:"+string);
            } catch (Exception e1) {
                ChatHistory.setText(ChatHistory.getText() + '\n'+ "Message sending fail:Network Error");
                try {
                    Thread.sleep(3000);
                    System.exit(0);
                } catch (InterruptedException e) {
                    e.printStackTrace();
                }
            }
        }
    }
    @Override
    public void actionPerformed(ActionEvent e) {
        if ((e.getSource() == Send) && (NewMsg.getText() != "")) {
            ChatHistory.setText(ChatHistory.getText() + '\n' + "ME:"+ NewMsg.getText());
            try {
                DataOutputStream dos = new DataOutputStream(conn.getOutputStream());
                dos.writeUTF(NewMsg.getText());
            } catch (Exception e1) {
                try {
                    Thread.sleep(3000);
                    System.exit(0);
                } catch (InterruptedException e2) {
                    e2.printStackTrace();
                }
            }
            NewMsg.setText("");
        }
    }

    public static void main(String[] args)throws UnknownHostException,IOException {
        new ServerChatForm();
    }
}